const returnTemplate = function(type, req, res) {
  try {
    const template = module.exports[type + "Template"];
    return res.status(200).json({ OK: true, data: template });
  } catch (error) {
    log.error("Exception in GET /%s/%s => %s", type, req.params.thingid, error);
    res.status(500).json({
      OK: false,
      error: error
    });
  }
};

const caseTemplate = Object.freeze({
  "id": "int",
	"type": "string",
	"original_language": "string",
	"post_date": "string",
	"published": "boolean",
	"updated_date": "string",
	"location": {
	  "name": "string",
    "address1": "string",
    "address2": "string",
    "city": "string",
    "province": "string",
    "country": "string",
    "postal_code": "string",
    "latitude": "string",
    "longitude": "string",
  },
  "files": [{
    "url":  "string",
		"title":  "string",
		"size":  "string",
	}],
	"tags": ["string"],
	"featured": "boolean",
	"issue": "string",
	"communication_mode": "string",
	"communication_with_audience": "string",
	"content_country": "string",
	"decision_method": "string",
	"end_date": "string",
	"facetoface_online_or_both": "string",
	"facilitated": "string",
	"voting": "string",
	"number_of_meeting_days": "string",
	"ongoing": "string",
	"start_date": "string",
	"total_number_of_participants": "string",
	"targeted_participant_demographic": "string",
	"kind_of_influence": "string",
	"targeted_participants_public_role": "string",
	"targeted_audience": "string",
	"participant_selection": "string",
	"specific_topic": "string",
	"staff_type": "string",
	"type_of_funding_entity": "string",
	"typical_implementing_entity": "string",
	"typical_sponsoring_entity": "string",
	"who_else_supported_the_initiative": "string",
	"who_was_primarily_responsible_for_organizing_the_initiative": "string",
	"links": ["string"],
	"hidden": "boolean",
	"videos": ["string"],
	"images": ["string"],
	"body": "string",
	"title": "string",
	"authors": [{
	  "user_id": "int",
		"timestamp": "string",
		"name": "string",
	}],
	"related_cases": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_methods": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_organizations": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"bookmarked": "boolean",
});

const methodTemplate = Object.freeze({
  "id": "int",
  "type": "string",
  "original_language": "string",
	"post_date": "string",
	"published": "boolean",
	"updated_date": "string",
	"location": {
	  "name": "string",
		"address1": "string",
		"address2": "string",
		"city": "string",
		"province": "string",
		"country": "string",
		"postal_code": "string",
		"latitude": "string",
		"longitude": "string",
	},
	"files": [{
	  "url":  "string",
		"title":  "string",
		"size":  "string",
	}],
	"tags": ["string"],
	"featured": "boolean",
	"best_for": "string",
	"communication_mode": "string",
	"decision_method": "string",
	"facilitated": "boolean",
	"governance_contribution": "string",
	"issue_interdependency": "string",
	"issue_polarization": "string",
	"issue_technical_complexity": "string",
	"kind_of_influence":  "string",
	"method_of_interaction": "string",
	"public_interaction_method": "string",
	"typical_funding_source": "string",
	"typical_implementing_entity": "string",
	"typical_sponsoring_entity":  "string",
	"links": ["string"],
	"hidden": "boolean",
	"videos": ["string"],
	"images": ["string"],
	"body": "string",
	"title":  "string",
	"authors": [{
	  "user_id": "int",
		"timestamp": "string",
		"name": "string",
	}],
	"related_cases": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_methods": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_organizations": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"bookmarked": "boolean",
});

const organizationTemplate = Object.freeze({
  "id": "int",
	"type": "string",
	"original_language": "string",
	"post_date": "string",
	"published": "boolean",
	"updated_date": "string",
	"location": {
		"name": "string",
		"address1": "string",
		"address2": "string",
		"city": "string",
		"province": "string",
		"country": "string",
		"postal_code": "string",
		"latitude": "string",
		"longitude": "string",
	},
	"files": [{
	  "url": "string",
		"title": "string",
		"size": "string",
	}],
	"tags": ["string"],
	"featured": "boolean",
	"executive_director": "string",
	"issue": "string",
	"sector": "string",
	"links": ["string"],
	"hidden": "boolean",
	"videos": ["string"],
	"images": ["string"],
	"body":  "string",
	"title":  "string",
	"authors": [{
		"user_id": "int",
		"timestamp": "string",
		"name": "string",
	}],
	"related_cases": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_methods": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"related_organizations": [{
    "id": "int",
    "title": "string",
    "type": "string",
    "images": ["string"],
    "post_date": "string",
    "updated_date": "string",
	}],
	"bookmarked": "string",
});

module.exports = {
  returnTemplate,
  caseTemplate,
  methodTemplate,
  organizationTemplate,
};
